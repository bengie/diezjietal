---
layout: post
title:  "Grunt JS"
date:   2013-06-21
categories: blog
tags: [JavaScript, Grunt, workflow]
---

## What is Grunt

[Grunt](http://gruntjs.com/) is a JavaScript Task Runner. <br> That's it. Thank you for reading my first blog post.

## The real deal

**Grunt** is designed to make your front-end development workflow a lot easier. Let's make this more clear with an example.

While working on the <a href="http://standaard.be">De Standaard</a>, read more about this <a href="/projects/2013/06/20/de-standaard.html">project</a>, we used various tools for building the templates.

* <a href="http://jekyllrb.com">Jekyll</a> (static site generator)
* <a href="http://sass-lang.com">Sass</a> and <a href="http://compass-style.org">Compass</a> (CSS pre-compilers)
* <a href="http://requirejs.org">RequireJS</a> (JavaScript Module loader) and a build script
* <a href="http://blesscss.com/">BlessCSS</a> (CSS splitter)

That made a total of 3 Terminal windows (Command Line Interface) watching for code changes on CSS and HTML , 1 RequireJS Build command in <a href="http://www.sublimetext.com/">Sublime Text 2</a> and 4 manual commands in the BlessCSS Teminal windows. Quite the burden when you need to do just a few simple changes to the source code. That's when <a href="http://twitter.com/stevenbenisek">@stevenbenisek</a> had the wonderful idea to introduce <strong>Grunt</strong> in our workflow. With a <a href="http://gruntjs.com/plugins">Grunt plugin</a> for each of our tools this could all run in just one Terminal window and not one single manual interaction is required, except the initial <code>$ grunt</code> command at the start of your working day.

## Getting started?!

Read the <a href="http://gruntjs.com/getting-started">Getting started guide on the Grunt website</a> it has some good step-by-step instructions.

Basically it comes down to creating a <code>Gruntfile.js</code> file (with the tasks) and a <code>package.json</code> (with meta information). Here's <a href="http://gruntjs.com/sample-gruntfile">an example</a>

## Taking it a step further

There are some crazy <a href="http://gruntjs.com/plugins">Grunt plugins</a> out there that can do a lot of heavy front-end lifting for you. There's this <a href="https://npmjs.org/package/grunt-ftp-deploy">FTP deploy plugin</a> that you could use to automatically upload any changes to your code to the remote (production) server. Handy if your editor/IDE doesn't support "publish to FTP on save". Browse through the repository to find the ones you need.

Another step is automating the creation of your <code>Gruntfile.js</code>. If you find yourself repeating the same process over and over again when you start a new project than maybe it's time to take a look at <a href="http://yeoman.io/">Yeoman.io</a>. Lately I start projects the same way. Building a static site with <a href="http://jekyllrb.com">Jekyll</a> for HTML templates, adding <a href="http://sass-lang.com">Sass</a> and <a href="http://compass-style.org">Compass</a> and configuring my <a href="http://gruntjs.com/">Grunt</a> settings. With <strong>Yeoman</strong> you can automate this workflow. More about this in a future blog post.

*Edit:* Apparently <a href="http://twitter.com/wolfr_">@wolfr_</a> wrote a <a href="http://wolfslittlestore.be/2013/05/grunt-jshappy-plan/">blog post</a> about <a href="https://github.com/happyplan/happyplan">Happy Plan</a>, a static file generator using jekyll, compass, fontcustom and grunt. One step closer to an automated workflow.
